---
title: Merging from Upstream Buildpacks
owner: Buildpacks
---

<strong><%= modified_date %></strong>

##<a id="forking"></a>Forking a Cloud Foundry Buildpack

Sometimes, the Cloud Foundry buildpacks does not satisfy some specific need or provide some functionality that you may need for your application or setup.
In this case, forking and maintaining your own version of a Cloud Foundry buildpack may make sense. In these scenarios, you would want keep your fork updated
with upstream changes from the Cloud Foundry buildpack so that valuable updates and new functionalities from upstream are available in your forked buildpack.

For more reference on creating forks, see Github: [Fork a Repo](https://help.github.com/articles/fork-a-repo/)

##<a id="syncing"></a>Syncing your Forked Buildpack

This process and its instructions are written in a manner specific for individuals who are maintaining buildpacks that are forked from the Cloud Foundry buildpacks. However, the workflow can be adapted to work with any forking or upstream setup.

To sync your forked buildpack with an upstream Cloud Foundry buildpack (ex. a forked Ruby buildpack):

- Inspect commits since last merge (if your buildpack is on Github, Github can show you unmerged diffs between your current branch and upstream, e.g. `https://github.com/your-org/your-buildpack/compare/master...cloudfoundry:master`)

    Ex. When we the maintainers of the Cloud Foundry Ruby Buildpack inspect for merging from upstream Heroku buildpacks, we refer to: https://github.com/cloudfoundry/ruby-buildpack/compare/develop...heroku:master

- Determine whether you want to merge. It's a good idea to briefly inspect each commit message and look at the `Files changed`.

- While in your forked buildpack repo, set the upstream remote as the Cloud Foundry buildpack repo.

        $ cd ~/workspace/ruby-buildpack
        $ git remote add upstream git@github.com:cloudfoundry/ruby-buildpack.git

- Pull down the remote upstream changes.

        $ git fetch upstream

- Merge the upstream changes into whatever the intended branch is. You may need to resolve merge conflicts.

        $ git checkout master
        $ git merge upstream/master

- Run the buildpack test suite to ensure that the upstream changes do not break anything.

        $ BUNDLE_GEMFILE=cf.Gemfile buildpack-build

- Push up the now updated branch.

        $ git push

- Your forked buildpack should now be synced and up to date with the upstream Cloud Foundry buildpack.


Notes on Merge Strategy:

- When merging upstream buildpacks, please ensure you do not use 'git rebase' as you might when doing feature branches. This approach is not sustainable, as you will need to confront the same merge conflicts over and over again.
- For more reference on syncing forks, see Github: [Syncing a Fork](https://help.github.com/articles/syncing-a-fork/)
